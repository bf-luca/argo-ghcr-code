name: Build and Push to GHCR
description: Builds and tests an go application, then pushes it to. Needs a PAT_GITHUB_TOKEN that can read/write packages and the repos.

inputs:
  app-name:
    description: Relative path to the folder of the go app.
    type: string
    required: true
  manifest-repo:
    description: "Path to the ghcr repo holding the packages (usually: '<user>/<repo>')"
    type: string
    required: true
  manifest-push-user:
    description: "User(name) that is used to commit changes to the manifest repo"
    type: string
    required: true
  manifest-push-mail:
    description: "Email that is used to commit changes to the manifest repo"
    type: string
    required: true
  PAT_GITHUB_TOKEN:
    description: "PAT to authenticate to the repo"
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout src
      uses: actions/checkout@v3
      with:
        path: 'src'
        ref: 'main'
        persist-credentials: false
    
    - name: Checkout dest
      uses: actions/checkout@v3
      with:
          path: 'dest'
          ref: 'main'
          repository: ${{ inputs.manifest-repo }}
          token: ${{ inputs.PAT_GITHUB_TOKEN }}
          persist-credentials: true
    
    - name: Config 'dest'-repo
      shell: bash
      working-directory: dest
      run: |
        git config --global user.name "${{ inputs.manifest-push-user }}"
        git config --global user.email "${{ inputs.manifest-push-mail }}"
    
    - name: Update package version
      shell: bash
      working-directory: dest
      run: |
        ls -la
        sed -i "s#${{ inputs.ghcr-repo }}-${{ inputs.app-name }}.*#${{ inputs.ghcr-repo }}:${{ github.sha }}#g" ./deployment-${{ inputs.app-name }}.yaml
    
    - name: Detect changes
      id: hasNewFiles
      shell: bash
      working-directory: dest
      run: |
        git commit -am "update with commit from ref: ${{ github.sha }}"
        git status --porcelain | wc -l
        if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
          echo "hasNewFiles=true" >> "$GITHUB_OUTPUT"
        else
          echo "hasNewFiles=false" >> "$GITHUB_OUTPUT"
        fi
    
    - name: Push changes if exits
      if: ${{ steps.hasNewFiles.outputs.hasNewFiles == 'true' }}
      working-directory: dest
      shell: bash
      run: git push
